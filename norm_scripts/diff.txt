851a852,930
>     #runall_sam2genes_gnorm_filter
>     $name_of_alljob = "$study.runall_sam2genes_gnorm_filter";
>     if (($resume eq "true")&&($run_job eq "false")){
> 	if ($name_of_alljob =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true") && ($GNORM eq "true")){
>         $name_of_job = "$study.sam2genes_gnorm";
>         $err_name = "sam2genes_gnorm_*.*.err";
>         &clear_log($name_of_alljob, $err_name);
>         if ($other eq "true"){
>             $c_option = "$submit \\\"$batchjobs, $jobname,$request,$queue_3G, $stat\\\"";
>             $new_queue = "";
>         }
>         else{
>             $new_queue = "-mem $queue_3G";
>         }
>         while(qx{$stat | wc -l} > $maxjobs){
>             sleep(10);
>         }
>         $job = "echo \"perl $norm_script_dir/runall_sam2genes_gnorm.pl $sample_dir $LOC $ensGene $strand_info $se $c_option $new_queue $cluster_max -filter\" | $batchjobs $mem $jobname \"$study.runall_sam2genes_gnorm_filter\" -o $logdir/$study.runall_sam2genes_gnorm_filter.out -e $logdir/$study.runall_sam2genes_gnorm_filter.err";
>         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
>         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
>         &check_err ($name_of_alljob, $err_name, $job_num);
>         $job_num++;
>     }
> 
>     #cat_genes_files filter
>     $name_of_job = "$study.cat_genes_files_filter";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_job =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true") && ($GNORM eq "true")){
>         $err_name = "$name_of_job.err";
>         &clear_log($name_of_job, $err_name);
>         while(qx{$stat | wc -l} > $maxjobs){
>             sleep(10);
>         }
>         $job = "echo \"perl $norm_script_dir/cat_genes_files.pl $sample_dir $LOC $data_stranded -filter\" | $batchjobs $mem $jobname \"$name_of_job\" -o $logdir/$name_of_job.out -e $logdir/$name_of_job.err";
> 
>         &onejob($job, $name_of_job, $job_num);
>         &check_exit_onejob($job, $name_of_job, $job_num);
> 	&check_err ($name_of_job, $err_name, $job_num);
>         $job_num++;
>     }
>     #runall_resolve_multimappers_gnorm
>     $name_of_alljob = "$study.runall_resolve_multimappers_gnorm";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_alljob =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true")&& ($GNORM eq "true")){
> 	$name_of_job = "$study.resolve_multimappers_gnorm";
>         $err_name = "resolve_multimappers_gnorm.*.err";
>         &clear_log($name_of_alljob, $err_name);
>         if ($other eq "true"){
>             $c_option = "$submit \\\"$batchjobs, $jobname,  $request, $queue_3G, $stat\\\"";
>             $new_queue = "";
>         }
>         else{
>             $new_queue = "-mem $queue_3G";
>         }
>         while(qx{$stat | wc -l} > $maxjobs){
>             sleep(10);
>         }
> 	$job = "echo \"perl $norm_script_dir/runall_resolve_multimappers_gnorm.pl $sample_dir $LOC $se $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$name_of_alljob\" -o $logdir/$name_of_alljob.out -e $logdir/$name_of_alljob.err";
>         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
>         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
>         &check_err ($name_of_alljob, $err_name, $job_num);
>         $job_num++;
>     }
> 
1138c1217
<             $job = "echo \"perl $norm_script_dir/filter_high_expressers_gnorm.pl $sample_dir $LOC $list_for_genequant $data_stranded $se\" | $batchjobs $mem $jobname \"$study.filter_high_expressers_gnorm\" -o $logdir/$study.filter_high_expressers_gnorm.out -e $logdir/$study.filter_high_expressers_gnorm.err";
---
>             $job = "echo \"perl $norm_script_dir/filter_high_expressers_gnorm.pl $sample_dir $LOC $list_for_genequant $data_stranded\" | $batchjobs $mem $jobname \"$study.filter_high_expressers_gnorm\" -o $logdir/$study.filter_high_expressers_gnorm.out -e $logdir/$study.filter_high_expressers_gnorm.err";
1226,1306d1304
<     #filter_sam EIJ
<     $name_of_alljob = "$study.runall_filtersam";
<     if (($resume eq "true")&&($run_job eq "false")){
<         if ($name_of_alljob =~ /.$name_to_check$/){
<             $run_job = "true";
<             $job_num = $res_num;
<         }
<     }
<     if (($run_job eq "true") && ($EIJ eq "true")){ #EIJ step
< 	$name_of_job = "$study.filtersam";
< 	$err_name = "filtersam.*.err";
< 	&clear_log($name_of_alljob, $err_name);
< 	if ($other eq "true"){
< 	    $c_option = "$submit \\\"$batchjobs, $jobname, $request, $queue_3G, $stat\\\"";
< 	    $new_queue = "";
< 	}
< 	else{
< 	    $new_queue = "-mem $queue_3G";
< 	}
< 	while(qx{$stat | wc -l} > $maxjobs){
< 	    sleep(10);
< 	}
< 	$job = "echo \"perl $norm_script_dir/runall_filter.pl $sample_dir $LOC $samfilename $se $c_option $new_queue $cluster_max $use_chr_name -mito \\\"$mito\\\"\" | $batchjobs $mem $jobname \"$study.runall_filtersam\" -o $logdir/$study.runall_filtersam.out -e $logdir/$study.runall_filtersam.err";
<     
< 	&runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
< 	&check_exit_alljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
< 	&check_err ($name_of_alljob, $err_name, $job_num);
< 	$job_num++;
<     }
< 
<     #runall_get_percent_numchr
<     $name_of_alljob = "$study.runall_get_percent_numchr";
<     if (($resume eq "true")&&($run_job eq "false")){
<         if ($name_of_alljob =~ /.$name_to_check$/){
<             $run_job = "true";
<             $job_num = $res_num;
<         }
<     }
<     if (($run_job eq "true")&& ($EIJ eq "true")){
<         $name_of_job = "$study.numchrcnt";
<         $err_name = "numchrcnt.*.err";
<         &clear_log($name_of_alljob, $err_name);
<         if ($other eq "true"){
<             $c_option = "$submit \\\"$batchjobs, $jobname,  $request, $queue_3G, $stat\\\"";
<             $new_queue = "";
<         }
<         else{
<             $new_queue = "-mem $queue_3G";
<         }
<         while(qx{$stat | wc -l} > $maxjobs){
<             sleep(10);
<         }
<         $job = "echo \"perl $norm_script_dir/runall_get_percent_numchr.pl $sample_dir $LOC -EIJ $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$study.runall_get_percent_numchr\" -o $logdir/$study.runall_get_percent_numchr.out -e $logdir/$study.runall_get_percent_numchr.err";
<         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
<         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
<         &check_err ($name_of_alljob, $err_name, $job_num);
<         $job_num++;
<     }
< 
<     #get_chr_stats
<     $name_of_job = "$study.get_chr_stats";
<     if (($resume eq "true")&&($run_job eq "false")){
<         if ($name_of_job =~ /.$name_to_check$/){
<             $run_job = "true";
<             $job_num = $res_num;
<         }
<     }
<     if (($run_job eq "true") && ($EIJ eq "true")){
<         $err_name = "$name_of_job.err";
< 
<         &clear_log($name_of_job, $err_name);
<         while (qx{$status | wc -l} > $maxjobs){
<             sleep(10);
<         }
<         $job = "echo \"perl $norm_script_dir/get_chr_stats.pl $sample_dir $LOC -EIJ\" | $batchjobs $mem $jobname \"$study.get_chr_stats\" -o $logdir/$study.get_chr_stats.out -e $logdir/$study.get_chr_stats.err";
<         &onejob($job, $name_of_job, $job_num);
<         &check_exit_onejob($job, $name_of_job, $job_num);
<         &check_err ($name_of_job, $err_name, $job_num);
<         $job_num++;
<     }
< 
1327a1326
> 
1401c1400
< 
---
>     
1482a1482
> 
1509a1510,1590
>     #filter_sam EIJ
>     $name_of_alljob = "$study.runall_filter_and_resolve";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_alljob =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true") && ($EIJ eq "true")){ #EIJ step
> 	$name_of_job = "$study.filtersam";
> 	$err_name = "filtersam.*.err";
> 	&clear_log($name_of_alljob, $err_name);
> 	if ($other eq "true"){
> 	    $c_option = "$submit \\\"$batchjobs, $jobname, $request, $queue_30G, $stat\\\"";
> 	    $new_queue = "";
> 	}
> 	else{
> 	    $new_queue = "-mem $queue_30G";
> 	}
> 	while(qx{$stat | wc -l} > $maxjobs){
> 	    sleep(10);
> 	}
> 	$job = "echo \"perl $norm_script_dir/runall_filter_and_resolve.pl $sample_dir $LOC $samfilename $list_for_exonquant $list_for_intronquant $LOC/master_list_of_intergenic_regions.txt $strand_info $se $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$name_of_alljob\" -o $logdir/$name_of_alljob.out -e $logdir/$name_of_alljob.err";
>     
> 	&runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
> 	&check_exit_alljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
> 	&check_err ($name_of_alljob, $err_name, $job_num);
> 	$job_num++;
>     }
> 
>     #runall_get_percent_numchr
>     $name_of_alljob = "$study.runall_get_percent_numchr";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_alljob =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true")&& ($EIJ eq "true")){
>         $name_of_job = "$study.numchrcnt";
>         $err_name = "numchrcnt.*.err";
>         &clear_log($name_of_alljob, $err_name);
>         if ($other eq "true"){
>             $c_option = "$submit \\\"$batchjobs, $jobname,  $request, $queue_3G, $stat\\\"";
>             $new_queue = "";
>         }
>         else{
>             $new_queue = "-mem $queue_3G";
>         }
>         while(qx{$stat | wc -l} > $maxjobs){
>             sleep(10);
>         }
>         $job = "echo \"perl $norm_script_dir/runall_get_percent_numchr.pl $sample_dir $LOC -EIJ $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$study.runall_get_percent_numchr\" -o $logdir/$study.runall_get_percent_numchr.out -e $logdir/$study.runall_get_percent_numchr.err";
>         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
>         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
>         &check_err ($name_of_alljob, $err_name, $job_num);
>         $job_num++;
>     }
> 
>     #get_chr_stats
>     $name_of_job = "$study.get_chr_stats";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_job =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true") && ($EIJ eq "true")){
>         $err_name = "$name_of_job.err";
> 
>         &clear_log($name_of_job, $err_name);
>         while (qx{$status | wc -l} > $maxjobs){
>             sleep(10);
>         }
>         $job = "echo \"perl $norm_script_dir/get_chr_stats.pl $sample_dir $LOC -EIJ\" | $batchjobs $mem $jobname \"$study.get_chr_stats\" -o $logdir/$study.get_chr_stats.out -e $logdir/$study.get_chr_stats.err";
>         &onejob($job, $name_of_job, $job_num);
>         &check_exit_onejob($job, $name_of_job, $job_num);
>         &check_err ($name_of_job, $err_name, $job_num);
>         $job_num++;
>     }
> 
1566c1647
< 	$job = "echo \"perl $norm_script_dir/runall_get_high_expressers.pl $sample_dir $LOC $cutoff_he $geneinfo $list_for_exonquant $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_get_high_expressers\" -o $logdir/$study.runall_get_high_expressers.out -e $logdir/$study.runall_get_high_expressers.err";
---
> 	$job = "echo \"perl $norm_script_dir/runall_get_high_expressers.pl $sample_dir $LOC $cutoff_he $annot $list_for_exonquant $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_get_high_expressers\" -o $logdir/$study.runall_get_high_expressers.out -e $logdir/$study.runall_get_high_expressers.err";
1777a1859
> 
1834,1866d1915
<     #check_fasta
<     my $seqnum = `grep "^>" $genome | wc -l`;
<     my $falinecnt = `wc -l $genome`;
<     my @lcfa =split(" ", $falinecnt);
<     my $linenum_fa = $lcfa[0];
<     my $temp_genome = "$LOC/one-line.fa";
<     if (($seqnum * 2) ne $linenum_fa){
< 	unless (-e $temp_genome){
< 	    #modify_to_onelinefa2
< 	    $name_of_job = "$study.modify_to_onelinefa2";
< 	    if (($resume eq "true")&&($run_job eq "false")){
< 		if ($name_of_job =~ /.$name_to_check$/){
< 		    $run_job = "true";
< 		    $job_num = $res_num;
< 		}
< 	    }
< 	    if ($run_job eq "true"){
< 		$err_name = "$name_of_job.err";
< 		&clear_log($name_of_job, $err_name);
< 		
< 		while(qx{$stat | wc -l} > $maxjobs){
< 		    sleep(10);
< 		}
< 		$job = "echo \"perl $norm_script_dir/rum-2.0.5_05/bin/modify_fa_to_have_seq_on_one_line.pl $genome > $temp_genome\"| $batchjobs $mem $jobname \"$name_of_job\" -o $logdir/$name_of_job.out -e $logdir/$name_of_job.err";
< 		
< 		&onejob($job, $name_of_job, $job_num);
< 		&only_err ($name_of_job, $err_name, $job_num);
< 		$job_num++;
< 		$genome = $temp_genome;
< 	    }
< 	}
< 	$genome = $temp_genome;
<     }
1873d1921
< 		$filter_gene2 = "true";
1932c1980
< 		    $job = "echo \"perl $norm_script_dir/filter_high_expressers_gnorm.pl $sample_dir $LOC $list_for_genequant $data_stranded $se\" | $batchjobs $mem $jobname \"$study.filter_high_expressers_gnorm_p2\" -o $logdir/$study.filter_high_expressers_gnorm_p2.out -e $logdir/$study.filter_high_expressers_gnorm_p2.err";
---
> 		    $job = "echo \"perl $norm_script_dir/filter_high_expressers_gnorm.pl $sample_dir $LOC $list_for_genequant $data_stranded\" | $batchjobs $mem $jobname \"$study.filter_high_expressers_gnorm_p2\" -o $logdir/$study.filter_high_expressers_gnorm_p2.out -e $logdir/$study.filter_high_expressers_gnorm_p2.err";
2005c2053
< 		    $job = "echo \"perl $norm_script_dir/predict_num_reads_gnorm.pl $sample_dir $LOC $data_stranded $se\" | $batchjobs $mem $jobname \"$study.predict_num_reads_gnorm_p2\" -o $logdir/$study.predict_num_reads_gnorm_p2.out -e $logdir/$study.predict_num_reads_gnorm_p2.err";
---
> 		    $job = "echo \"perl $norm_script_dir/predict_num_reads_gnorm.pl $sample_dir $LOC $data_stranded\" | $batchjobs $mem $jobname \"$study.predict_num_reads_gnorm_p2\" -o $logdir/$study.predict_num_reads_gnorm_p2.out -e $logdir/$study.predict_num_reads_gnorm_p2.err";
2211,2264d2258
<     if ($STRANDED =~ /^true/i){
< 	#unique_merge_gnorm
< 	$name_of_job = "$study.unique_merge_gnorm";
< 	if (($resume eq "true")&&($run_job eq "false")){
< 	    if ($name_of_job =~ /.$name_to_check$/){
< 		$run_job = "true";
< 		$job_num = $res_num;
< 	    }
< 	}
< 	if (($run_job eq "true") && ($GNORM eq "true")){
< 	    $err_name = "$name_of_job.err";
< 	    &clear_log($name_of_job, $err_name);
< 	    while(qx{$stat | wc -l} > $maxjobs){
< 		sleep(10);
< 	    }
< 	    $job = "echo \"perl $norm_script_dir/unique_merge_gnorm.pl $sample_dir $LOC $se\" | $batchjobs $mem $jobname \"$name_of_job\"  $request$queue_6G -o $logdir/$name_of_job.out -e $logdir/$name_of_job.err";
< 
< 	    &onejob($job, $name_of_job, $job_num);
< 	    &check_exit_onejob($job, $name_of_job, $job_num);
< 	    &check_err ($name_of_job, $err_name, $job_num);
< 	    $job_num++;
< 	}
<     }
< 
<     #runall_sam2junctions_gnorm
<     $name_of_alljob = "$study.runall_sam2junctions_gnorm";
<     if (($resume eq "true")&&($run_job eq "false")){
<         if ($name_of_alljob =~ /.$name_to_check$/){
<             $run_job = "true";
<             $job_num = $res_num;
<         }
<     }
<     if (($run_job eq "true") && ($GNORM eq "true")){
< 	$name_of_job = "$study.sam2junctions_gnorm";
<         $err_name = "sam2junctions_gnorm.*.err";
<         &clear_log($name_of_alljob, $err_name);
<         if ($other eq "true"){
<             $c_option = "$submit \\\"$batchjobs, $jobname, $request, $queue_6G, $stat\\\"";
<             $new_queue = "";
<         }
<         else{
<             $new_queue = "-mem $queue_6G";
<         }
<         while(qx{$stat | wc -l} > $maxjobs){
<             sleep(10);
<         }
<         $job = "echo \"perl $norm_script_dir/runall_sam2junctions.pl $sample_dir $LOC $ensGene $genome -gnorm $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_sam2junctions_gnorm\" -o $logdir/$study.runall_sam2junctions_gnorm.out -e $logdir/$study.runall_sam2junctions_gnorm.err";
< 
<         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
<         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
<         &check_err ($name_of_alljob, $err_name, $job_num);
<         $job_num++;
<     }
< 
2326c2320
<     if (($filter_gene2 eq "true") && ($run_job eq "true") && ($GNORM eq "true")){
---
>     if (($filter_gene eq "true") && ($run_job eq "true") && ($GNORM eq "true")){
2390c2384
< 		    $job = "echo \"perl $norm_script_dir/runall_get_high_expressers.pl $sample_dir $LOC $cutoff_he $geneinfo $list_for_exonquant $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_get_high_expressers_p2\" -o $logdir/$study.runall_get_high_expressers_p2.out -e $logdir/$study.runall_get_high_expressers_p2.err";
---
> 		    $job = "echo \"perl $norm_script_dir/runall_get_high_expressers.pl $sample_dir $LOC $cutoff_he $annot $list_for_exonquant $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_get_high_expressers_p2\" -o $logdir/$study.runall_get_high_expressers_p2.out -e $logdir/$study.runall_get_high_expressers_p2.err";
2787c2781
< 	$job = "echo \"perl $norm_script_dir/run_annotate.pl $to_annotate $geneinfo $LOC $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$study.run_annotate\" -o $logdir/$study.run_annotate.out -e $logdir/$study.run_annotate.err";
---
> 	$job = "echo \"perl $norm_script_dir/run_annotate.pl $to_annotate $annot $LOC $c_option $new_queue $cluster_max\" | $batchjobs $mem $jobname \"$study.run_annotate\" -o $logdir/$study.run_annotate.out -e $logdir/$study.run_annotate.err";
2843c2837
<         $job = "echo \"perl $norm_script_dir/get_normfactors_table.pl $sample_dir $LOC $data_stranded -mito \\\"$mito\\\"\" | $batchjobs $mem $jobname \"$study.get_normfactors_table\" -o $logdir/$study.get_normfactors_table.out -e $logdir/$study.get_normfactors_table.err";
---
>         $job = "echo \"perl $norm_script_dir/get_normfactors_table.pl $sample_dir $LOC $data_stranded\" | $batchjobs $mem $jobname \"$study.get_normfactors_table\" -o $logdir/$study.get_normfactors_table.out -e $logdir/$study.get_normfactors_table.err";
2849a2844,2898
> 
>     if ($STRANDED =~ /^true/i){
> 	#unique_merge_gnorm
> 	$name_of_job = "$study.unique_merge_gnorm";
> 	if (($resume eq "true")&&($run_job eq "false")){
> 	    if ($name_of_job =~ /.$name_to_check$/){
> 		$run_job = "true";
> 		$job_num = $res_num;
> 	    }
> 	}
> 	if (($run_job eq "true") && ($GNORM eq "true")){
> 	    $err_name = "$name_of_job.err";
> 	    &clear_log($name_of_job, $err_name);
> 	    while(qx{$stat | wc -l} > $maxjobs){
> 		sleep(10);
> 	    }
> 	    $job = "echo \"perl $norm_script_dir/unique_merge_gnorm.pl $sample_dir $LOC $se\" | $batchjobs $mem $jobname \"$name_of_job\"  $request$queue_6G -o $logdir/$name_of_job.out -e $logdir/$name_of_job.err";
> 
> 	    &onejob($job, $name_of_job, $job_num);
> 	    &check_exit_onejob($job, $name_of_job, $job_num);
> 	    &check_err ($name_of_job, $err_name, $job_num);
> 	    $job_num++;
> 	}
>     }
> 
>     #runall_sam2junctions_gnorm
>     $name_of_alljob = "$study.runall_sam2junctions_gnorm";
>     if (($resume eq "true")&&($run_job eq "false")){
>         if ($name_of_alljob =~ /.$name_to_check$/){
>             $run_job = "true";
>             $job_num = $res_num;
>         }
>     }
>     if (($run_job eq "true") && ($GNORM eq "true")){
> 	$name_of_job = "$study.sam2junctions_gnorm";
>         $err_name = "sam2junctions_gnorm.*.err";
>         &clear_log($name_of_alljob, $err_name);
>         if ($other eq "true"){
>             $c_option = "$submit \\\"$batchjobs, $jobname, $request, $queue_6G, $stat\\\"";
>             $new_queue = "";
>         }
>         else{
>             $new_queue = "-mem $queue_6G";
>         }
>         while(qx{$stat | wc -l} > $maxjobs){
>             sleep(10);
>         }
>         $job = "echo \"perl $norm_script_dir/runall_sam2junctions.pl $sample_dir $LOC $ensGene $genome -gnorm $c_option $new_queue $cluster_max $data_stranded\" | $batchjobs $mem $jobname \"$study.runall_sam2junctions_gnorm\" -o $logdir/$study.runall_sam2junctions_gnorm.out -e $logdir/$study.runall_sam2junctions_gnorm.err";
> 
>         &runalljob($job, $name_of_alljob, $name_of_job, $job_num, $err_name);
>         &check_exit_alljob($job, $name_of_alljob,$name_of_job, $job_num, $err_name);
>         &check_err ($name_of_alljob, $err_name, $job_num);
>         $job_num++;
>     }
> 
2873c2922
<             $job = "echo \"perl $norm_script_dir/runall_sam2cov_gnorm.pl $sample_dir $LOC $fai $sam2cov_loc $aligner $c_option $new_queue $cluster_max $se $strand_info\" | $batchjobs $mem $jobname \"$study.runall_sam2cov_gnorm\" -o $logdir/$study.runall_sam2cov_gnorm.out -e $logdir/$study.runall_sam2cov_gnorm.err";
---
>             $job = "echo \"perl $norm_script_dir/runall_sam2cov_gnorm.pl $sample_dir $LOC $fai $sam2cov_loc $aligner $c_option $new_queue $cluster_max $se $strand_info_sam2cov\" | $batchjobs $mem $jobname \"$study.runall_sam2cov_gnorm\" -o $logdir/$study.runall_sam2cov_gnorm.out -e $logdir/$study.runall_sam2cov_gnorm.err";
2903c2952
< 	    $job = "echo \"perl $norm_script_dir/runall_sam2cov.pl $sample_dir $LOC $fai $sam2cov_loc $aligner $c_option $new_queue $cluster_max $strand_info\" | $batchjobs $mem $jobname \"$study.runall_sam2cov\" -o $logdir/$study.runall_sam2cov.out -e $logdir/$study.runall_sam2cov.err";
---
> 	    $job = "echo \"perl $norm_script_dir/runall_sam2cov.pl $sample_dir $LOC $fai $sam2cov_loc $aligner $c_option $new_queue $cluster_max $strand_info_sam2cov\" | $batchjobs $mem $jobname \"$study.runall_sam2cov\" -o $logdir/$study.runall_sam2cov.out -e $logdir/$study.runall_sam2cov.err";
